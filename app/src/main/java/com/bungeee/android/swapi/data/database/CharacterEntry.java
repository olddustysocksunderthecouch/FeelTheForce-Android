package com.bungeee.android.swapi.data.database;

import android.arch.persistence.room.Entity;
import android.arch.persistence.room.Ignore;
import android.arch.persistence.room.Index;
import android.arch.persistence.room.PrimaryKey;
import android.arch.persistence.room.Room;

/**
 * Defines the schema of a table in {@link Room} for a single weather
 * forecast. The date is used as an {@link Index} so that its uniqueness can be ensured. Indexes
 * also allow for fast lookup for the column.
 */
@Entity(tableName = "character", indices = {@Index(value = {"url"}, unique = true)})
public class CharacterEntry {

    /**
     * Makes sure the id is the primary key (ensures uniqueness), is auto generated by {@link Room}.
     */
    @PrimaryKey(autoGenerate = true)
    private int id;
    private String name;
    private String url;

    /**
     * This constructor is used by CharacterJsonParser. When the network fetch has JSON data, it
     * converts this data to FilmEntry objects using this constructor.
     *
     * @param name       Name of the character
     * @param url        url of the character

     */
    @Ignore
    public CharacterEntry(String name, String url) {
        this.name = name;
        this.url = url;
    }

    // Constructor used by Room to create CharacterEntries
    public CharacterEntry(int id, String name, String url) {
        this.id = id;
        this.name = name;
        this.url = url;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getUrl() {
        return url;
    }
}